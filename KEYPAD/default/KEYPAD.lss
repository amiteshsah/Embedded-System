
KEYPAD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000016e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000001c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000001e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000019e  00000000  00000000  000001fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000d1  00000000  00000000  0000039b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000256  00000000  00000000  0000046c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000006c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000c3  00000000  00000000  000006e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000060  00000000  00000000  000007a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000807  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e6       	ldi	r30, 0x6E	; 110
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 b5 00 	jmp	0x16a	; 0x16a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:
#include<avr/io.h>
#include<util/delay.h>
int main()
{
  92:	ef 92       	push	r14
  94:	ff 92       	push	r15
  96:	0f 93       	push	r16
  98:	1f 93       	push	r17
DDRA=0X00;
  9a:	1a ba       	out	0x1a, r1	; 26
DDRD=0X0F;
  9c:	8f e0       	ldi	r24, 0x0F	; 15
  9e:	81 bb       	out	0x11, r24	; 17
DDRB=0xFF;
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	87 bb       	out	0x17, r24	; 23
while(1)
{
PORTD=0b00001110;
  a4:	9e e0       	ldi	r25, 0x0E	; 14
  a6:	e9 2e       	mov	r14, r25
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  a8:	24 ed       	ldi	r18, 0xD4	; 212
  aa:	30 e3       	ldi	r19, 0x30	; 48
_delay_ms(50);
if(PINA==0b11111110){PORTB=0b00000001;}
  ac:	71 e0       	ldi	r23, 0x01	; 1
if(PINA==0b11111101){PORTB=0b00000010;}
  ae:	62 e0       	ldi	r22, 0x02	; 2
if(PINA==0b11111011){PORTB=0b00000100;}
  b0:	54 e0       	ldi	r21, 0x04	; 4
if(PINA==0b11110111){PORTB=0b00001000;}
  b2:	48 e0       	ldi	r20, 0x08	; 8

PORTD=0b00001101;
  b4:	8d e0       	ldi	r24, 0x0D	; 13
  b6:	f8 2e       	mov	r15, r24
_delay_ms(50);
if(PINA==0b11111110){PORTB=0b00010000;}
  b8:	00 e1       	ldi	r16, 0x10	; 16
if(PINA==0b11111101){PORTB=0b00100010;}
  ba:	12 e2       	ldi	r17, 0x22	; 34
if(PINA==0b11111011){PORTB=0b01000100;}
  bc:	b4 e4       	ldi	r27, 0x44	; 68
if(PINA==0b11110111){PORTB=0b10001000;}
  be:	a8 e8       	ldi	r26, 0x88	; 136
PORTD=0b00001011;
  c0:	fb e0       	ldi	r31, 0x0B	; 11
_delay_ms(50);
if(PINA==0b11111110){PORTB=0b00000001;}
if(PINA==0b00011101){PORTB=0b00000010;}
if(PINA==0b11111011){PORTB=0b00000100;}
if(PINA==0b11110111){PORTB=0b00001000;}
PORTD=0b00000111;
  c2:	e7 e0       	ldi	r30, 0x07	; 7
DDRA=0X00;
DDRD=0X0F;
DDRB=0xFF;
while(1)
{
PORTD=0b00001110;
  c4:	e2 ba       	out	0x12, r14	; 18
  c6:	c9 01       	movw	r24, r18
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <main+0x36>
_delay_ms(50);
if(PINA==0b11111110){PORTB=0b00000001;}
  cc:	89 b3       	in	r24, 0x19	; 25
  ce:	8e 3f       	cpi	r24, 0xFE	; 254
  d0:	09 f4       	brne	.+2      	; 0xd4 <main+0x42>
  d2:	78 bb       	out	0x18, r23	; 24
if(PINA==0b11111101){PORTB=0b00000010;}
  d4:	89 b3       	in	r24, 0x19	; 25
  d6:	8d 3f       	cpi	r24, 0xFD	; 253
  d8:	09 f4       	brne	.+2      	; 0xdc <main+0x4a>
  da:	68 bb       	out	0x18, r22	; 24
if(PINA==0b11111011){PORTB=0b00000100;}
  dc:	89 b3       	in	r24, 0x19	; 25
  de:	8b 3f       	cpi	r24, 0xFB	; 251
  e0:	09 f4       	brne	.+2      	; 0xe4 <main+0x52>
  e2:	58 bb       	out	0x18, r21	; 24
if(PINA==0b11110111){PORTB=0b00001000;}
  e4:	89 b3       	in	r24, 0x19	; 25
  e6:	87 3f       	cpi	r24, 0xF7	; 247
  e8:	09 f4       	brne	.+2      	; 0xec <main+0x5a>
  ea:	48 bb       	out	0x18, r20	; 24

PORTD=0b00001101;
  ec:	f2 ba       	out	0x12, r15	; 18
  ee:	c9 01       	movw	r24, r18
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <main+0x5e>
_delay_ms(50);
if(PINA==0b11111110){PORTB=0b00010000;}
  f4:	89 b3       	in	r24, 0x19	; 25
  f6:	8e 3f       	cpi	r24, 0xFE	; 254
  f8:	09 f4       	brne	.+2      	; 0xfc <main+0x6a>
  fa:	08 bb       	out	0x18, r16	; 24
if(PINA==0b11111101){PORTB=0b00100010;}
  fc:	89 b3       	in	r24, 0x19	; 25
  fe:	8d 3f       	cpi	r24, 0xFD	; 253
 100:	09 f4       	brne	.+2      	; 0x104 <main+0x72>
 102:	18 bb       	out	0x18, r17	; 24
if(PINA==0b11111011){PORTB=0b01000100;}
 104:	89 b3       	in	r24, 0x19	; 25
 106:	8b 3f       	cpi	r24, 0xFB	; 251
 108:	09 f4       	brne	.+2      	; 0x10c <main+0x7a>
 10a:	b8 bb       	out	0x18, r27	; 24
if(PINA==0b11110111){PORTB=0b10001000;}
 10c:	89 b3       	in	r24, 0x19	; 25
 10e:	87 3f       	cpi	r24, 0xF7	; 247
 110:	09 f4       	brne	.+2      	; 0x114 <main+0x82>
 112:	a8 bb       	out	0x18, r26	; 24
PORTD=0b00001011;
 114:	f2 bb       	out	0x12, r31	; 18
 116:	c9 01       	movw	r24, r18
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <main+0x86>
_delay_ms(50);
if(PINA==0b11111110){PORTB=0b00000001;}
 11c:	89 b3       	in	r24, 0x19	; 25
 11e:	8e 3f       	cpi	r24, 0xFE	; 254
 120:	09 f4       	brne	.+2      	; 0x124 <main+0x92>
 122:	78 bb       	out	0x18, r23	; 24
if(PINA==0b00011101){PORTB=0b00000010;}
 124:	89 b3       	in	r24, 0x19	; 25
 126:	8d 31       	cpi	r24, 0x1D	; 29
 128:	09 f4       	brne	.+2      	; 0x12c <main+0x9a>
 12a:	68 bb       	out	0x18, r22	; 24
if(PINA==0b11111011){PORTB=0b00000100;}
 12c:	89 b3       	in	r24, 0x19	; 25
 12e:	8b 3f       	cpi	r24, 0xFB	; 251
 130:	09 f4       	brne	.+2      	; 0x134 <main+0xa2>
 132:	58 bb       	out	0x18, r21	; 24
if(PINA==0b11110111){PORTB=0b00001000;}
 134:	89 b3       	in	r24, 0x19	; 25
 136:	87 3f       	cpi	r24, 0xF7	; 247
 138:	09 f4       	brne	.+2      	; 0x13c <main+0xaa>
 13a:	48 bb       	out	0x18, r20	; 24
PORTD=0b00000111;
 13c:	e2 bb       	out	0x12, r30	; 18
 13e:	c9 01       	movw	r24, r18
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <main+0xae>
_delay_ms(50);
if(PINA==0b11111110){PORTB=0b00000001;}
 144:	89 b3       	in	r24, 0x19	; 25
 146:	8e 3f       	cpi	r24, 0xFE	; 254
 148:	09 f4       	brne	.+2      	; 0x14c <main+0xba>
 14a:	78 bb       	out	0x18, r23	; 24
if(PINA==0b00011101){PORTB=0b00000010;}
 14c:	89 b3       	in	r24, 0x19	; 25
 14e:	8d 31       	cpi	r24, 0x1D	; 29
 150:	09 f4       	brne	.+2      	; 0x154 <main+0xc2>
 152:	68 bb       	out	0x18, r22	; 24
if(PINA==0b11111011){PORTB=0b00000100;}
 154:	89 b3       	in	r24, 0x19	; 25
 156:	8b 3f       	cpi	r24, 0xFB	; 251
 158:	09 f4       	brne	.+2      	; 0x15c <main+0xca>
 15a:	58 bb       	out	0x18, r21	; 24
if(PINA==0b11110111){PORTB=0b00001000;}
 15c:	89 b3       	in	r24, 0x19	; 25
 15e:	87 3f       	cpi	r24, 0xF7	; 247
 160:	11 f4       	brne	.+4      	; 0x166 <main+0xd4>
 162:	48 bb       	out	0x18, r20	; 24
 164:	af cf       	rjmp	.-162    	; 0xc4 <main+0x32>

else 
PORTB=0X00;
 166:	18 ba       	out	0x18, r1	; 24
 168:	ad cf       	rjmp	.-166    	; 0xc4 <main+0x32>

0000016a <_exit>:
 16a:	f8 94       	cli

0000016c <__stop_program>:
 16c:	ff cf       	rjmp	.-2      	; 0x16c <__stop_program>
