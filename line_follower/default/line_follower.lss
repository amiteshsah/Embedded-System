
line_follower.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000011e  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  0000013e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000083  00000000  00000000  00000159  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000004e  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000c7  00000000  00000000  0000022a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000002f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000008e  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000028  00000000  00000000  000003a2  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ec       	ldi	r30, 0xCA	; 202
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 63 00 	jmp	0xc6	; 0xc6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:
#include<avr/io.h>
#include<util/delay.h>
int main()
{
  92:	1a ba       	out	0x1a, r1	; 26
DDRA=0b00000000;
DDRB=0b00001111;
  94:	8f e0       	ldi	r24, 0x0F	; 15
  96:	87 bb       	out	0x17, r24	; 23
while(1)
{
x=PINA & 0b00000011;
if(x==0b00000011)
{
PORTB=0b00001010;
  98:	4a e0       	ldi	r20, 0x0A	; 10
{
PORTB=0b00000010;
}
else if(x==0b00000010)
{
PORTB=0b00001000;
  9a:	38 e0       	ldi	r19, 0x08	; 8
{
PORTB=0b00001010;
}
else if(x==0b00000001)
{
PORTB=0b00000010;
  9c:	22 e0       	ldi	r18, 0x02	; 2
DDRA=0b00000000;
DDRB=0b00001111;
unsigned int x;
while(1)
{
x=PINA & 0b00000011;
  9e:	89 b3       	in	r24, 0x19	; 25
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	83 70       	andi	r24, 0x03	; 3
  a4:	90 70       	andi	r25, 0x00	; 0
if(x==0b00000011)
  a6:	83 30       	cpi	r24, 0x03	; 3
  a8:	91 05       	cpc	r25, r1
  aa:	11 f4       	brne	.+4      	; 0xb0 <main+0x1e>
{
PORTB=0b00001010;
  ac:	48 bb       	out	0x18, r20	; 24
  ae:	f7 cf       	rjmp	.-18     	; 0x9e <main+0xc>
}
else if(x==0b00000001)
  b0:	81 30       	cpi	r24, 0x01	; 1
  b2:	91 05       	cpc	r25, r1
  b4:	11 f4       	brne	.+4      	; 0xba <main+0x28>
{
PORTB=0b00000010;
  b6:	28 bb       	out	0x18, r18	; 24
  b8:	f2 cf       	rjmp	.-28     	; 0x9e <main+0xc>
}
else if(x==0b00000010)
  ba:	02 97       	sbiw	r24, 0x02	; 2
  bc:	11 f4       	brne	.+4      	; 0xc2 <main+0x30>
{
PORTB=0b00001000;
  be:	38 bb       	out	0x18, r19	; 24
  c0:	ee cf       	rjmp	.-36     	; 0x9e <main+0xc>
}
else
{
PORTB=0b00000000;
  c2:	18 ba       	out	0x18, r1	; 24
  c4:	ec cf       	rjmp	.-40     	; 0x9e <main+0xc>

000000c6 <_exit>:
  c6:	f8 94       	cli

000000c8 <__stop_program>:
  c8:	ff cf       	rjmp	.-2      	; 0xc8 <__stop_program>
